[ { "prover": "script", "verdict": "valid" },
  { "header": "Range", "tactic": "Wp.range",
    "params": { "inf": 0, "sup": 7 },
    "select": { "select": "inside-step", "at": 16, "kind": "branch",
                "occur": 0, "target": "fm_mask_0", "pattern": "$fm_mask" },
    "children": { "Lower 0": [ { "prover": "qed", "verdict": "valid" } ],
                  "Value 0": [ { "prover": "qed", "verdict": "valid" } ],
                  "Value 1": [ { "prover": "why3:Alt-Ergo,2.3.0",
                                 "verdict": "valid", "time": 0.3164,
                                 "steps": 351 } ],
                  "Value 2": [ { "prover": "why3:Alt-Ergo,2.3.0",
                                 "verdict": "timeout", "time": 3. },
                               { "header": "Definition",
                                 "tactic": "Wp.unfold", "params": {},
                                 "select": { "select": "clause-goal",
                                             "target": "(P_valid_adc_configuration_part2\n  adc_fake_regs_6[1->adc_fake_regs_6[1][14->(land 239 (lor 32 ocr2osr_0))]]\n  adc_connected_11[1->v_10] adc_ena_11[1->v_8] adc_popcount_11[1->v_9] 2)",
                                             "pattern": "P_valid_adc_configuration_part2[=]" },
                                 "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                 [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                     "verdict": "valid",
                                                     "time": 0.1407,
                                                     "steps": 300 } ] } } ],
                  "Value 3": [ { "prover": "why3:Alt-Ergo,2.3.0",
                                 "verdict": "timeout", "time": 3. },
                               { "header": "Definition",
                                 "tactic": "Wp.unfold", "params": {},
                                 "select": { "select": "clause-goal",
                                             "target": "let x_0 = (land 239 (lor 32 ocr2osr_0)) in\n(P_valid_adc_configuration_part2\n  adc_fake_regs_11[0->adc_fake_regs_11[0][14->x_0]][1\n    ->adc_fake_regs_11[1][14->x_0]] adc_connected_18[0->v_18][1->v_10]\n  adc_ena_18[0->v_16][1->v_8] adc_popcount_18[0->v_17][1->v_9] 3)",
                                             "pattern": "P_valid_adc_configuration_part2[=]" },
                                 "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                 [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                     "verdict": "timeout",
                                                     "time": 3. },
                                                   { "header": "Definition",
                                                     "tactic": "Wp.unfold",
                                                     "params": {},
                                                     "select": { "select": "inside-step",
                                                                 "at": 3,
                                                                 "kind": "have",
                                                                 "occur": 0,
                                                                 "target": "(P_valid_adc_configuration_part2 adc_fake_regs_11 adc_connected_18 adc_ena_18\n  adc_popcount_18 3)",
                                                                 "pattern": "P_valid_adc_configuration_part2$adc_fake_regs" },
                                                     "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "timeout",
                                                                    "time": 3. },
                                                                    { "header": "Instance",
                                                                    "tactic": "Wp.instance",
                                                                    "params": 
                                                                    { "P1": 
                                                                    { "select": "kint",
                                                                    "val": "0" },
                                                                    "P2": 
                                                                    { "select": "kint",
                                                                    "val": "1" },
                                                                    "P3": null,
                                                                    "P4": null,
                                                                    "P5": null,
                                                                    "P6": null,
                                                                    "P7": null,
                                                                    "P8": null,
                                                                    "P9": null,
                                                                    "P10": null },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 3,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "forall i_0,i_1:int.\nlet m_0 = adc_fake_regs_11[i_0] in\nlet m_1 = adc_fake_regs_11[i_1] in\n((land 3 (lsl 1 i_0))!=0) -> ((land 3 (lsl 1 i_1))!=0) -> (0<=i_0)\n-> (i_0<i_1) -> (i_1<=2) -> ((m_0[13]=m_1[13]) /\\ (m_0[14]=m_1[14]))",
                                                                    "pattern": "\\F\\F>~~<=<<=&land0land00#1#1#0#0" },
                                                                    "children": 
                                                                    { "Instance": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "timeout",
                                                                    "time": 3. },
                                                                    { "header": "Split",
                                                                    "tactic": "Wp.split",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "let x_0 = (land 239 (lor 32 ocr2osr_0)) in\nlet m_0 =\n    adc_fake_regs_11[0->adc_fake_regs_11[0][14->x_0]][1\n      ->adc_fake_regs_11[1][14->x_0]] in\n(P_valid_adc_configuration_part1 m_0 adc_connected_18[0->v_18][1->v_10]\n  adc_ena_18[0->v_16][1->v_8] adc_popcount_18[0->v_17][1->v_9] 3)\n/\\ (forall i_0,i_1:int.\n    let m_1 = m_0[i_0] in\n    let m_2 = m_0[i_1] in\n    ((land 3 (lsl 1 i_0))!=0) -> ((land 3 (lsl 1 i_1))!=0) -> (0<=i_0)\n    -> (i_0<i_1) -> (i_1<=2) -> ((m_1[13]=m_2[13]) /\\ (m_1[14]=m_2[14])))",
                                                                    "pattern": "&P_valid_adc_configuration_part1" },
                                                                    "children": 
                                                                    { "Goal 1/2": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.336,
                                                                    "steps": 375 } ],
                                                                    "Goal 2/2": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "timeout",
                                                                    "time": 3. },
                                                                    { "header": "Split",
                                                                    "tactic": "Wp.split",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "let x_0 = (land 239 (lor 32 ocr2osr_0)) in\nlet m_0 =\n    adc_fake_regs_11[0->adc_fake_regs_11[0][14->x_0]][1\n      ->adc_fake_regs_11[1][14->x_0]] in\nlet m_1 = m_0[i_1] in\nlet m_2 = m_0[i_0] in\n(m_1[13]=m_2[13]) /\\ (m_1[14]=m_2[14])",
                                                                    "pattern": "&==[][][][][]13[]13[]14[]14[=]$i" },
                                                                    "children": 
                                                                    { "Goal 1/2": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.309,
                                                                    "steps": 417 } ],
                                                                    "Goal 2/2": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 2 },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 4,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "i_1",
                                                                    "pattern": "$i" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 1": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Upper 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ] } } ] } } ] } } ] } } ] } } ],
                  "Value 4": [ { "prover": "why3:Alt-Ergo,2.3.0",
                                 "verdict": "timeout", "time": 3. },
                               { "header": "Definition",
                                 "tactic": "Wp.unfold", "params": {},
                                 "select": { "select": "inside-step",
                                             "at": 3, "kind": "have",
                                             "occur": 0,
                                             "target": "(P_valid_adc_configuration_part2 adc_fake_regs_1 adc_connected_4 adc_ena_4\n  adc_popcount_4 4)",
                                             "pattern": "P_valid_adc_configuration_part2$adc_fake_regs" },
                                 "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                 [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                     "verdict": "timeout",
                                                     "time": 3. },
                                                   { "header": "Definition",
                                                     "tactic": "Wp.unfold",
                                                     "params": {},
                                                     "select": { "select": "clause-goal",
                                                                 "target": "(P_valid_adc_configuration_part2\n  adc_fake_regs_1[2->adc_fake_regs_1[2][14->(land 239 (lor 32 ocr2osr_0))]]\n  adc_connected_4[2->v_2] adc_ena_4[2->v_0] adc_popcount_4[2->v_1] 4)",
                                                                 "pattern": "P_valid_adc_configuration_part2[=]" },
                                                     "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.1407,
                                                                    "steps": 290 } ] } } ] } } ],
                  "Value 5": [ { "prover": "why3:Alt-Ergo,2.3.0",
                                 "verdict": "timeout", "time": 3. },
                               { "header": "Definition",
                                 "tactic": "Wp.unfold", "params": {},
                                 "select": { "select": "clause-goal",
                                             "target": "let x_0 = (land 239 (lor 32 ocr2osr_0)) in\n(P_valid_adc_configuration_part2\n  adc_fake_regs_11[0->adc_fake_regs_11[0][14->x_0]][2\n    ->adc_fake_regs_11[2][14->x_0]] adc_connected_18[0->v_18][2->v_2]\n  adc_ena_18[0->v_16][2->v_0] adc_popcount_18[0->v_17][2->v_1] 5)",
                                             "pattern": "P_valid_adc_configuration_part2[=]" },
                                 "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                 [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                     "verdict": "timeout",
                                                     "time": 3. },
                                                   { "header": "Definition",
                                                     "tactic": "Wp.unfold",
                                                     "params": {},
                                                     "select": { "select": "inside-step",
                                                                 "at": 3,
                                                                 "kind": "have",
                                                                 "occur": 0,
                                                                 "target": "(P_valid_adc_configuration_part2 adc_fake_regs_11 adc_connected_18 adc_ena_18\n  adc_popcount_18 5)",
                                                                 "pattern": "P_valid_adc_configuration_part2$adc_fake_regs" },
                                                     "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.246,
                                                                    "steps": 374 } ] } } ] } } ],
                  "Value 6": [ { "prover": "why3:Alt-Ergo,2.3.0",
                                 "verdict": "timeout", "time": 3. },
                               { "header": "Definition",
                                 "tactic": "Wp.unfold", "params": {},
                                 "select": { "select": "clause-goal",
                                             "target": "let x_0 = (land 239 (lor 32 ocr2osr_0)) in\n(P_valid_adc_configuration_part2\n  adc_fake_regs_6[1->adc_fake_regs_6[1][14->x_0]][2\n    ->adc_fake_regs_6[2][14->x_0]] adc_connected_11[1->v_10][2->v_2]\n  adc_ena_11[1->v_8][2->v_0] adc_popcount_11[1->v_9][2->v_1] 6)",
                                             "pattern": "P_valid_adc_configuration_part2[=]" },
                                 "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                 [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                     "verdict": "timeout",
                                                     "time": 3. },
                                                   { "header": "Definition",
                                                     "tactic": "Wp.unfold",
                                                     "params": {},
                                                     "select": { "select": "inside-step",
                                                                 "at": 3,
                                                                 "kind": "have",
                                                                 "occur": 0,
                                                                 "target": "(P_valid_adc_configuration_part2 adc_fake_regs_6 adc_connected_11 adc_ena_11\n  adc_popcount_11 6)",
                                                                 "pattern": "P_valid_adc_configuration_part2$adc_fake_regs" },
                                                     "children": { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.2394,
                                                                    "steps": 374 } ] } } ] } } ],
                  "Value 7": [ { "prover": "why3:Alt-Ergo,2.3.0",
                                 "verdict": "valid", "time": 0.7018,
                                 "steps": 407 } ],
                  "Upper 7": [ { "prover": "qed", "verdict": "valid" } ] } } ]
