[ { "header": "Definition", "tactic": "Wp.unfold", "params": {},
    "select": { "select": "clause-step", "at": 40, "kind": "have",
                "target": "(P_valid_adc_configuration_part2 adc_fake_regs_27 adc_connected_21 adc_ena_21\n  adc_popcount_21 (land 2 fm_mask_1))",
                "pattern": "P_valid_adc_configuration_part2$adc_fake_regs" },
    "children": { "Unfold 'P_valid_adc_configuration_part2'": [ { "header": "Definition",
                                                                  "tactic": "Wp.unfold",
                                                                  "params": {},
                                                                  "select": 
                                                                    { "select": "clause-step",
                                                                    "at": 40,
                                                                    "kind": "have",
                                                                    "target": "(P_valid_adc_configuration_part1 adc_fake_regs_27 adc_connected_21 adc_ena_21\n  adc_popcount_21 (land 2 fm_mask_1))",
                                                                    "pattern": "P_valid_adc_configuration_part1$adc_fake_regs" },
                                                                  "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part1'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-step",
                                                                    "at": 22,
                                                                    "kind": "have",
                                                                    "target": "(P_valid_adc_configuration_part2 adc_fake_regs_53 adc_connected_41 adc_ena_41\n  adc_popcount_41 (land 1 fm_mask_1))",
                                                                    "pattern": "P_valid_adc_configuration_part2$adc_fake_regs" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-step",
                                                                    "at": 22,
                                                                    "kind": "have",
                                                                    "target": "(P_valid_adc_configuration_part1 adc_fake_regs_53 adc_connected_41 adc_ena_41\n  adc_popcount_41 (land 1 fm_mask_1))",
                                                                    "pattern": "P_valid_adc_configuration_part1$adc_fake_regs" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part1'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 27,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(P_adc_connected_and_valid adc_fake_regs_46 adc_connected_36 adc_ena_36\n  adc_popcount_36 1)",
                                                                    "pattern": "P_adc_connected_and_valid$adc_fake_regs" },
                                                                    "children": 
                                                                    { "Unfold 'P_adc_connected_and_valid'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 27,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(P_adc_connected_and_valid\n  adc_fake_regs_46[1->adc_fake_regs_46[1][1->v_65][0->v_64][15->v_63]]\n  adc_connected_36[1->1] adc_ena_36[1->15]\n  adc_popcount_36[1->(L_popcount 15)] 1)",
                                                                    "pattern": "P_adc_connected_and_valid[=][=][=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_adc_connected_and_valid'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 30,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(P_adc_connected_and_valid\n  adc_fake_regs_46[1\n    ->adc_fake_regs_46[1][1->3][0->4][15->15][1->v_53][0->v_52][13->v_51]]\n  adc_connected_36[1->v_50] adc_ena_36[1->v_48] adc_popcount_36[1->v_49] 1)",
                                                                    "pattern": "P_adc_connected_and_valid[=][=][=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_adc_connected_and_valid'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 15,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(P_adc_connected_and_valid\n  adc_fake_regs_72[0\n    ->adc_fake_regs_72[0][1->v_101][0->v_100][15->v_99][1->v_89][0->v_88][13\n        ->v_87][1->v_77][0->v_76][14->v_75]] adc_connected_56[0->v_74]\n  adc_ena_56[0->v_72] adc_popcount_56[0->v_73] 0)",
                                                                    "pattern": "P_adc_connected_and_valid[=][=][=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_adc_connected_and_valid'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 33,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(P_adc_connected_and_valid\n  adc_fake_regs_46[1\n    ->adc_fake_regs_46[1][1->3][0->4][15->15][1->3][0->4][13->v_51][1->v_41]\n        [0->v_40][14->v_39]] adc_connected_36[1->v_38] adc_ena_36[1->v_36]\n  adc_popcount_36[1->v_37] 1)",
                                                                    "pattern": "P_adc_connected_and_valid[=][=][=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_adc_connected_and_valid'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 12,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "(P_adc_connected_and_valid\n  adc_fake_regs_72[0\n    ->adc_fake_regs_72[0][1->v_101][0->v_100][15->v_72][1->v_89][0->v_88][13\n        ->v_87]] adc_connected_56[0->v_86] adc_ena_56[0->v_84]\n  adc_popcount_56[0->v_85] 0)",
                                                                    "pattern": "P_adc_connected_and_valid[=][=][=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_adc_connected_and_valid'": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 7 },
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "fm_mask_1",
                                                                    "pattern": "$fm_mask" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 1": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.2095,
                                                                    "steps": 243 } ],
                                                                    "Value 2": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "(P_valid_adc_configuration_part2\n  adc_fake_regs_46[1\n    ->adc_fake_regs_46[1][1->3][0->4][15->15][1->3][0->4][13\n        ->(L_wreg_reserved_bits 13 clk1_1)][1->3][0->4][14\n        ->(L_wreg_reserved_bits 14 clk2_1)]] adc_connected_36[1->1]\n  adc_ena_36[1->15] adc_popcount_36[1->4] 2)",
                                                                    "pattern": "P_valid_adc_configuration_part2[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "(P_valid_adc_configuration_part1\n  adc_fake_regs_46[1\n    ->adc_fake_regs_46[1][1->3][0->4][15->15][1->3][0->4][13\n        ->(L_wreg_reserved_bits 13 clk1_1)][1->3][0->4][14\n        ->(L_wreg_reserved_bits 14 clk2_1)]] adc_connected_36[1->1]\n  adc_ena_36[1->15] adc_popcount_36[1->4] 2)",
                                                                    "pattern": "P_valid_adc_configuration_part1[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part1'": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0818,
                                                                    "steps": 146 } ] } } ] } } ],
                                                                    "Value 3": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "let x_0 = (L_wreg_reserved_bits 13 clk1_1) in\nlet x_1 = (L_wreg_reserved_bits 14 clk2_1) in\n(P_valid_adc_configuration_part2\n  adc_fake_regs_72[0\n    ->adc_fake_regs_72[0][1->v_101][0->v_100][15->15][1->3][0->4][13->x_0][1\n        ->3][0->4][14->x_1]][1\n    ->adc_fake_regs_72[1][1->3][0->4][15->15][1->3][0->4][13->x_0][1->3][0\n        ->4][14->x_1]] adc_connected_56[0->1][1->1] adc_ena_56[0->15][1->15]\n  adc_popcount_56[0->4][1->4] 3)",
                                                                    "pattern": "P_valid_adc_configuration_part2[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let x_0 = (L_wreg_reserved_bits 13 clk1_1) in\nlet x_1 = (L_wreg_reserved_bits 14 clk2_1) in\n(P_valid_adc_configuration_part1\n  adc_fake_regs_72[0\n    ->adc_fake_regs_72[0][1->v_101][0->v_100][15->15][1->3][0->4][13->x_0][1\n        ->3][0->4][14->x_1]][1\n    ->adc_fake_regs_72[1][1->3][0->4][15->15][1->3][0->4][13->x_0][1->3][0\n        ->4][14->x_1]] adc_connected_56[0->1][1->1] adc_ena_56[0->15][1->15]\n  adc_popcount_56[0->4][1->4] 3)",
                                                                    "pattern": "P_valid_adc_configuration_part1[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part1'": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 2 },
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 1,
                                                                    "target": "i_15",
                                                                    "pattern": "$i" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 2 },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 0,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "i_16",
                                                                    "pattern": "$i" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 1": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Upper 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ],
                                                                    "Value 1": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 2 },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 0,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "i_16",
                                                                    "pattern": "$i" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 1": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Upper 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ],
                                                                    "Value 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Upper 2": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0489,
                                                                    "steps": 52 } ] } } ] } } ] } } ],
                                                                    "Value 4": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0559,
                                                                    "steps": 101 } ],
                                                                    "Value 5": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.215,
                                                                    "steps": 192 } ],
                                                                    "Value 6": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "(P_valid_adc_configuration_part2\n  adc_fake_regs_46[1\n    ->adc_fake_regs_46[1][1->3][0->4][15->15][1->3][0->4][13\n        ->(L_wreg_reserved_bits 13 clk1_1)][1->3][0->4][14\n        ->(L_wreg_reserved_bits 14 clk2_1)]] adc_connected_36[1->1]\n  adc_ena_36[1->15] adc_popcount_36[1->4] 2)",
                                                                    "pattern": "P_valid_adc_configuration_part2[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "(P_valid_adc_configuration_part1\n  adc_fake_regs_46[1\n    ->adc_fake_regs_46[1][1->3][0->4][15->15][1->3][0->4][13\n        ->(L_wreg_reserved_bits 13 clk1_1)][1->3][0->4][14\n        ->(L_wreg_reserved_bits 14 clk2_1)]] adc_connected_36[1->1]\n  adc_ena_36[1->15] adc_popcount_36[1->4] 2)",
                                                                    "pattern": "P_valid_adc_configuration_part1[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part1'": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.082,
                                                                    "steps": 146 } ] } } ] } } ],
                                                                    "Value 7": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "clause-goal",
                                                                    "target": "let x_0 = (L_wreg_reserved_bits 13 clk1_1) in\nlet x_1 = (L_wreg_reserved_bits 14 clk2_1) in\n(P_valid_adc_configuration_part2\n  adc_fake_regs_72[0\n    ->adc_fake_regs_72[0][1->v_101][0->v_100][15->15][1->3][0->4][13->x_0][1\n        ->3][0->4][14->x_1]][1\n    ->adc_fake_regs_72[1][1->3][0->4][15->15][1->3][0->4][13->x_0][1->3][0\n        ->4][14->x_1]] adc_connected_56[0->1][1->1] adc_ena_56[0->15][1->15]\n  adc_popcount_56[0->4][1->4] 3)",
                                                                    "pattern": "P_valid_adc_configuration_part2[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part2'": 
                                                                    [ { "header": "Definition",
                                                                    "tactic": "Wp.unfold",
                                                                    "params": {},
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 0,
                                                                    "target": "let x_0 = (L_wreg_reserved_bits 13 clk1_1) in\nlet x_1 = (L_wreg_reserved_bits 14 clk2_1) in\n(P_valid_adc_configuration_part1\n  adc_fake_regs_72[0\n    ->adc_fake_regs_72[0][1->v_101][0->v_100][15->15][1->3][0->4][13->x_0][1\n        ->3][0->4][14->x_1]][1\n    ->adc_fake_regs_72[1][1->3][0->4][15->15][1->3][0->4][13->x_0][1->3][0\n        ->4][14->x_1]] adc_connected_56[0->1][1->1] adc_ena_56[0->15][1->15]\n  adc_popcount_56[0->4][1->4] 3)",
                                                                    "pattern": "P_valid_adc_configuration_part1[=]" },
                                                                    "children": 
                                                                    { "Unfold 'P_valid_adc_configuration_part1'": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 2 },
                                                                    "select": 
                                                                    { "select": "inside-goal",
                                                                    "occur": 1,
                                                                    "target": "i_15",
                                                                    "pattern": "$i" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 2 },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 0,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "i_16",
                                                                    "pattern": "$i" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 1": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Upper 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ],
                                                                    "Value 1": 
                                                                    [ { "header": "Range",
                                                                    "tactic": "Wp.range",
                                                                    "params": 
                                                                    { "inf": 0,
                                                                    "sup": 2 },
                                                                    "select": 
                                                                    { "select": "inside-step",
                                                                    "at": 0,
                                                                    "kind": "have",
                                                                    "occur": 0,
                                                                    "target": "i_16",
                                                                    "pattern": "$i" },
                                                                    "children": 
                                                                    { "Lower 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 0": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 1": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Value 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Upper 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ],
                                                                    "Value 2": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ],
                                                                    "Upper 2": 
                                                                    [ { "prover": "why3:Alt-Ergo,2.3.0",
                                                                    "verdict": "valid",
                                                                    "time": 0.0437,
                                                                    "steps": 52 } ] } } ] } } ] } } ],
                                                                    "Upper 7": 
                                                                    [ { "prover": "qed",
                                                                    "verdict": "valid" } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ] } } ]
